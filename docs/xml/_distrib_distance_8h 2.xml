<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_distrib_distance_8h" kind="file" language="C++">
    <compoundname>DistribDistance.h</compoundname>
    <includes local="no">vector</includes>
    <includedby refid="_distrib_distances_8cpp" local="yes">/Users/jacklewis/Documents/work/year3/DMet/src/DMet/DistribDistances.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h</label>
        <link refid="_distrib_distance_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_d_met">DMet</innernamespace>
    <innernamespace refid="namespace_d_met_1_1_distrib">DMet::Distrib</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>jack<sp/>lewis<sp/>on<sp/>22/11/2021.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::vector;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="namespace_d_met" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_d_met" kindref="compound">DMet</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/***</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Namespace<sp/>for<sp/>distribution<sp/>distances</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Distrib{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/***</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Computes<sp/>the<sp/>Kullback<sp/>Leibler<sp/>Divergence<sp/>between<sp/>two<sp/>probability<sp/>distributions.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>∑<sp/>Xi<sp/>log(Xi/Yi)</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>Xi<sp/>=<sp/>0<sp/>&amp;&amp;<sp/>Yi<sp/>&gt;=<sp/>0<sp/>then<sp/>Yi</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>Xi<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>Yi<sp/>=<sp/>0<sp/>then<sp/>inf</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>res<sp/>mpfr<sp/>variable<sp/>to<sp/>store<sp/>result</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>v1<sp/>vector<sp/>1<sp/>representing<sp/>probability<sp/>distribution</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>v2<sp/>vector<sp/>2<sp/>representing<sp/>probability<sp/>distribution</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>pdfCheck<sp/>Flag<sp/>to<sp/>turn<sp/>of<sp/>pdf<sp/>check<sp/>used<sp/>for<sp/>Jensen<sp/>Shannon</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KLDiv(mpfr_t<sp/>&amp;res,<sp/>vector&lt;double&gt;<sp/>&amp;v1,<sp/>vector&lt;double&gt;<sp/>&amp;v2,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pdfCheck);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/***</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Computes<sp/>the<sp/>Kullback<sp/>Leibler<sp/>Divergence<sp/>between<sp/>two<sp/>probability<sp/>distributions.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>KL_Div<sp/>=<sp/>∑<sp/>Xi<sp/>log(Xi/Yi)</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>Xi<sp/>=<sp/>0<sp/>&amp;&amp;<sp/>Yi<sp/>&gt;=<sp/>0<sp/>then<sp/>Yi</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>Xi<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>Yi<sp/>=<sp/>0<sp/>then<sp/>inf</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>res<sp/>mpfr<sp/>variable<sp/>to<sp/>store<sp/>result</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>v1<sp/>vector<sp/>1<sp/>representing<sp/>probability<sp/>distribution</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>v2<sp/>vector<sp/>2<sp/>representing<sp/>probability<sp/>distribution</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KLDiv(mpfr_t<sp/>&amp;res,<sp/>vector&lt;double&gt;<sp/>&amp;v1,<sp/>vector&lt;double&gt;<sp/>&amp;v2);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/***</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Computes<sp/>the<sp/>Kullback<sp/>Leibler<sp/>Divergence<sp/>between<sp/>two<sp/>sets<sp/>of<sp/>n<sp/>dimensional<sp/>points.<sp/>Data<sp/>is<sp/>first<sp/>binned<sp/>to<sp/>generate</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>probability<sp/>distributions<sp/>then<sp/>used<sp/>to<sp/>calculate<sp/>KL<sp/>divergence.<sp/>Data<sp/>is<sp/>binned<sp/>using<sp/>equal<sp/>width<sp/>binning<sp/>where<sp/>each<sp/>dimension</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>split<sp/>into<sp/>k<sp/>amount<sp/>of<sp/>bins<sp/>with<sp/>k<sp/>representing<sp/>the<sp/>arity.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>res<sp/>mpfr<sp/>variable<sp/>to<sp/>store<sp/>result</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>v1<sp/>vector<sp/>1</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>v2<sp/>vector<sp/>2</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>arity<sp/>Number<sp/>of<sp/>bins<sp/>per<sp/>dimension</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KLDiv(mpfr_t<sp/>&amp;res,<sp/>vector&lt;vector&lt;double&gt;&gt;<sp/>&amp;v1,<sp/>vector&lt;vector&lt;double&gt;&gt;<sp/>&amp;v2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arity);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/***</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Computes<sp/>the<sp/>Jensen<sp/>Shannon<sp/>Divergence<sp/>between<sp/>2<sp/>probability<sp/>distributions</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>JS(P||Q)<sp/>=<sp/>1/2KL_Div(P||M)<sp/>+<sp/>1/2KL_Div(Q||M)</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>M<sp/>=<sp/>1/2(P+Q)</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>where<sp/>KL_Div<sp/>is<sp/>the<sp/>Kullback<sp/>Leibler<sp/>Divergence</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>res<sp/>the<sp/>mpfr<sp/>variable<sp/>to<sp/>store<sp/>the<sp/>result</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>vector1<sp/>probability<sp/>distribution<sp/>1</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>vector2<sp/>probability<sp/>distribution<sp/>2</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JensenShannon(mpfr_t<sp/>&amp;res,<sp/>vector&lt;double&gt;<sp/>&amp;vector1,<sp/>vector&lt;double&gt;<sp/>&amp;vector2);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/***</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Computes<sp/>the<sp/>Jensen<sp/>Shannon<sp/>Distance<sp/>from<sp/>2<sp/>vectors<sp/>of<sp/>point<sp/>data.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>data<sp/>is<sp/>first<sp/>binned<sp/>using<sp/>equal<sp/>width<sp/>binning<sp/>into<sp/>k<sp/>bins<sp/>per<sp/>dimension<sp/>where<sp/>k<sp/>is<sp/>the<sp/>arity.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>probability<sp/>distribution<sp/>is<sp/>then<sp/>retrieved<sp/>the<sp/>Jensen<sp/>Shannon<sp/>divergence<sp/>is<sp/>calculated.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>res<sp/>mpfr<sp/>variable<sp/>to<sp/>store<sp/>result</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>v1<sp/>vector<sp/>1</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>v2<sp/>vector<sp/>2</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>arity<sp/>number<sp/>of<sp/>bins<sp/>per<sp/>dimension</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JensenShannon(mpfr_t<sp/>&amp;res,<sp/>vector&lt;vector&lt;double&gt;&gt;<sp/>&amp;v1,<sp/>vector&lt;vector&lt;double&gt;&gt;<sp/>&amp;v2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arity);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h"/>
  </compounddef>
</doxygen>
