<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespace_d_met_1_1_distrib" kind="namespace" language="C++">
    <compoundname>DMet::Distrib</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_d_met_1_1_distrib_1a1c41e04848ac4d2677ec15d6bdcefc20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DMet::Distrib::KLDiv</definition>
        <argsstring>(mpfr_t &amp;res, vector&lt; double &gt; &amp;v1, vector&lt; double &gt; &amp;v2, bool pdfCheck)</argsstring>
        <name>KLDiv</name>
        <param>
          <type>mpfr_t &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pdfCheck</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the Kullback Leibler Divergence between two probability distributions.</para>
<para>∑ Xi log(Xi/Yi) if Xi = 0 &amp;&amp; Yi &gt;= 0 then Yi if Xi &gt; 0 &amp;&amp; Yi = 0 then inf</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>mpfr variable to store result </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v1</parametername>
</parameternamelist>
<parameterdescription>
<para>vector 1 representing probability distribution </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v2</parametername>
</parameternamelist>
<parameterdescription>
<para>vector 2 representing probability distribution </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pdfCheck</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to turn of pdf check used for Jensen Shannon </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h" line="27" column="10" declfile="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h" declline="27" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_met_1_1_distrib_1a9558ccb77bd3b13042424f63dc3cf397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DMet::Distrib::KLDiv</definition>
        <argsstring>(mpfr_t &amp;res, vector&lt; double &gt; &amp;v1, vector&lt; double &gt; &amp;v2)</argsstring>
        <name>KLDiv</name>
        <param>
          <type>mpfr_t &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the Kullback Leibler Divergence between two probability distributions.</para>
<para>KL_Div = ∑ Xi log(Xi/Yi) if Xi = 0 &amp;&amp; Yi &gt;= 0 then Yi if Xi &gt; 0 &amp;&amp; Yi = 0 then inf</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>mpfr variable to store result </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v1</parametername>
</parameternamelist>
<parameterdescription>
<para>vector 1 representing probability distribution </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v2</parametername>
</parameternamelist>
<parameterdescription>
<para>vector 2 representing probability distribution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h" line="40" column="10" declfile="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h" declline="40" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_met_1_1_distrib_1a791838408247fd8660a0fb757c42e9cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DMet::Distrib::KLDiv</definition>
        <argsstring>(mpfr_t &amp;res, vector&lt; vector&lt; double &gt; &gt; &amp;v1, vector&lt; vector&lt; double &gt; &gt; &amp;v2, int arity)</argsstring>
        <name>KLDiv</name>
        <param>
          <type>mpfr_t &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>vector&lt; vector&lt; double &gt; &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>vector&lt; vector&lt; double &gt; &gt; &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the Kullback Leibler Divergence between two sets of n dimensional points. Data is first binned to generate probability distributions then used to calculate KL divergence. Data is binned using equal width binning where each dimension is split into k amount of bins with k representing the arity.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>mpfr variable to store result </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v1</parametername>
</parameternamelist>
<parameterdescription>
<para>vector 1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v2</parametername>
</parameternamelist>
<parameterdescription>
<para>vector 2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arity</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bins per dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h" line="52" column="10" declfile="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h" declline="52" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_met_1_1_distrib_1aced7faf83b692238a942e852ca61fa88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DMet::Distrib::JensenShannon</definition>
        <argsstring>(mpfr_t &amp;res, vector&lt; double &gt; &amp;vector1, vector&lt; double &gt; &amp;vector2)</argsstring>
        <name>JensenShannon</name>
        <param>
          <type>mpfr_t &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>vector1</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>vector2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the Jensen Shannon Divergence between 2 probability distributions</para>
<para>JS(P||Q) = 1/2KL_Div(P||M) + 1/2KL_Div(Q||M) M = 1/2(P+Q) where KL_Div is the Kullback Leibler Divergence</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>the mpfr variable to store the result </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector1</parametername>
</parameternamelist>
<parameterdescription>
<para>probability distribution 1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector2</parametername>
</parameternamelist>
<parameterdescription>
<para>probability distribution 2 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h" line="66" column="10" declfile="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h" declline="66" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_met_1_1_distrib_1a28a6da07a2b13dd32a9811a9e4300fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DMet::Distrib::JensenShannon</definition>
        <argsstring>(mpfr_t &amp;res, vector&lt; vector&lt; double &gt; &gt; &amp;v1, vector&lt; vector&lt; double &gt; &gt; &amp;v2, int arity)</argsstring>
        <name>JensenShannon</name>
        <param>
          <type>mpfr_t &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>vector&lt; vector&lt; double &gt; &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>vector&lt; vector&lt; double &gt; &gt; &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the Jensen Shannon Distance from 2 vectors of point data. The data is first binned using equal width binning into k bins per dimension where k is the arity. The probability distribution is then retrieved the Jensen Shannon divergence is calculated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>mpfr variable to store result </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v1</parametername>
</parameternamelist>
<parameterdescription>
<para>vector 1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v2</parametername>
</parameternamelist>
<parameterdescription>
<para>vector 2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arity</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bins per dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h" line="79" column="10" declfile="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h" declline="79" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Namespace for distribution distances </para>
    </detaileddescription>
    <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h" line="13" column="5"/>
  </compounddef>
</doxygen>
