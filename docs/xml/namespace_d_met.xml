<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespace_d_met" kind="namespace" language="C++">
    <compoundname>DMet</compoundname>
    <innernamespace refid="namespace_d_met_1_1_distrib">DMet::Distrib</innernamespace>
    <innernamespace refid="namespace_d_met_1_1_utils">DMet::Utils</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_d_met_1a6ec1c495ec55fef8246396dae912c388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DMet::getEuclidean</definition>
        <argsstring>(double vector1[], double vector2[], int size1, int size2)</argsstring>
        <name>getEuclidean</name>
        <param>
          <type>double</type>
          <declname>vector1</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>vector2</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function that computes the Euclidean distance. Uses the implementation of Minkowski distance with a p value set as 2</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector1</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector2</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size1</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size2</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector2 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>floating point result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/PointDistances.h" line="12" column="12" bodyfile="/Users/jacklewis/Documents/work/year3/DMet/src/DMet/PointDistances.cpp" bodystart="94" bodyend="96" declfile="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/PointDistances.h" declline="12" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_met_1a3dd769310bed3578980dfd0e77b151aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DMet::getMinkowski</definition>
        <argsstring>(double vector1[], double vector2[], int size1, int size2, double pvalue)</argsstring>
        <name>getMinkowski</name>
        <param>
          <type>double</type>
          <declname>vector1</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>vector2</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pvalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function that computes the distance between vector 1 and vector 2 Uses Minkowski distance (∑(Xi−Yi)^p)^1/p</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector1</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector2</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size1</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size2</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pvalue</parametername>
</parameternamelist>
<parameterdescription>
<para>pvalue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>floating point result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/PointDistances.h" line="13" column="12" bodyfile="/Users/jacklewis/Documents/work/year3/DMet/src/DMet/PointDistances.cpp" bodystart="63" bodyend="82" declfile="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/PointDistances.h" declline="13" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_met_1a8be89964b283f82d4436fc3070507518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DMet::getManhattan</definition>
        <argsstring>(double vector1[], double vector2[], int size1, int size2)</argsstring>
        <name>getManhattan</name>
        <param>
          <type>double</type>
          <declname>vector1</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>vector2</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function that computes the Manhattan distance. Uses the implementation of Minkowski distance with a p value set as 1 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector1</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector2</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size1</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size2</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector2 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>floating point result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/PointDistances.h" line="14" column="12" bodyfile="/Users/jacklewis/Documents/work/year3/DMet/src/DMet/PointDistances.cpp" bodystart="107" bodyend="109" declfile="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/PointDistances.h" declline="14" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_met_1aea3e67f06335f6872265655b55c7f38d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DMet::getChebyshev</definition>
        <argsstring>(double vector1[], double vector2[], int size1, int size2)</argsstring>
        <name>getChebyshev</name>
        <param>
          <type>double</type>
          <declname>vector1</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>vector2</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function that computes the Chebeshev distance. Uses a different implimentation than minkowski</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector1</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector2</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector1</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector2</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size1</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size2</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector2 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>floating point result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/PointDistances.h" line="15" column="12" bodyfile="/Users/jacklewis/Documents/work/year3/DMet/src/DMet/PointDistances.cpp" bodystart="123" bodyend="143" declfile="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/PointDistances.h" declline="15" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_met_1afa6eb1a6b4b0a8fd4ad51fbfdd124f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DMet::testGMP</definition>
        <argsstring>()</argsstring>
        <name>testGMP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/PointDistances.h" line="16" column="10" bodyfile="/Users/jacklewis/Documents/work/year3/DMet/src/DMet/PointDistances.cpp" bodystart="12" bodyend="28" declfile="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/PointDistances.h" declline="16" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_met_1ad68a59f4bd762235797bab94d706cbd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DMet::getMinkowski</definition>
        <argsstring>(mpf_t *res, double *vector1, double *vector2, int size1, int size2, unsigned long pvalue, long precision)</argsstring>
        <name>getMinkowski</name>
        <param>
          <type>mpf_t *</type>
          <declname>res</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vector1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vector2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size2</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>pvalue</declname>
        </param>
        <param>
          <type>long</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/PointDistances.h" line="19" column="5" declfile="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/PointDistances.h" declline="19" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Outer namespace of library </para>
    </detaileddescription>
    <location file="/Users/jacklewis/Documents/work/year3/DMet/include/DMet/DistribDistance.h" line="8" column="1"/>
  </compounddef>
</doxygen>
